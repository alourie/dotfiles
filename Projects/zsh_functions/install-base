# vim:ft=zsh

function install_arch() {
    # Deps list, it's for arch; will need some update for debians/fedoras
    APPS="dunst polybar redshift feh network-manager-applet pasystray kitty neovim curl unzip tar starship rustup"
    for app in ${(@s/ /)APPS}; do
        if ! command -v $app > /dev/null; then
            # Not installed, just do all
            $sudo pacman -S --needed ${(@s/ /)APPS}
            break
        fi
    done

    # Install Paru
    if ! command -v paru > /dev/null; then
        cd $HOME/Projects

        rustup self upgrade-data
        rustup install stable
        rustup default stable

        sudo pacman -S --needed base-devel
        git clone https://aur.archlinux.org/paru.git
        cd paru
        makepkg -si
    fi

    #  currently I'm using JetBrains Mono, so expect it to be installed
    paru -y nerd-fonts-jetbrains-mono

}

function setup_npm() {
  if [ ! -d $HOME/.npm-global ]; then
    mkdir $HOME/.npm-global
  fi
  npm config set prefix "$HOME/.npm-global"
}

function install_neovim() {
  pushd $HOME/Projects
  git clone https://github.com/neovim/neovim 
  cd neovim
  echo "CMAKE_EXTRA_FLAGS := -DCMAKE_INSTALL_PREFIX=$HOME/.local/" > local.mk
  make CMAKE_BUILD_TYPE=Release
  make install
  popd
}

function install_lunarvim() {
  wget https://raw.githubusercontent.com/lunarvim/lunarvim/master/utils/installer/install.sh -O install_lvim.sh
  chmod +x install_lvim.sh
  ./install_lvim.sh -y
}

function install_debian() {
    echo "Set up debian system"

    sudo apt update
    sudo apt -y install \
      git curl wget \
      ninja-build gettext libtool libtool-bin autoconf automake cmake g++ pkg-config unzip curl doxygen npm pip \
      fzf

    if ! command -v rustup > /dev/null; then
      sh -c "$(curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs)" "" -y 
    fi


    rustup self upgrade-data
    rustup install stable
    rustup default stable

    setup_npm
    install_neovim
    install_lunarvim
}

function install_fedora() {
    echo "Set up fedora system"
}

function install_alpine() {
    APPS="zsh bash neovim curl unzip tar starship file"
    for app in "${(@s/ /)APPS}"; do
        if ! command -v $app > /dev/null; then
            # Not installed, just do all
            $sudo apk add ${(@s/ /)APPS}
            break
        fi
    done
}

# What OS are we running?
if command -v sudo > /dev/null; then
    sudo="sudo"
fi

if command -v apt > /dev/null; then
    install_debian
elif command -v apk > /dev/null; then
    install_alpine
elif command -v dnf > /dev/null; then
    install_fedora
elif command -v pacman > /dev/null; then
    install_arch
fi

